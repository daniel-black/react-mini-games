{"version":3,"sources":["../src/mini-game/MiniGame.tsx","../src/shared/useGameLoop.ts","../src/shared/useHighScore.ts","../src/runtime/runnerGame.ts","../src/runtime/paddleGame.ts","../src/games/Runner.tsx","../src/games/Paddle.tsx"],"sourcesContent":["import { useMemo, useRef, useState } from \"react\";\nimport type { MiniGameProps, MiniGameName } from \"./types\";\nimport { useGameLoop } from \"../shared/useGameLoop\";\nimport { useHighScore } from \"../shared/useHighScore\";\nimport type { BaseGameProps, GameLifecycle } from \"../shared/types\";\nimport { createRunner } from \"../runtime/runnerGame\";\nimport { createPaddle } from \"../runtime/paddleGame\";\n\nfunction pickGame(name: MiniGameName, baseProps: BaseGameProps): GameLifecycle {\n  switch (name) {\n    case \"runner\":\n      return createRunner(baseProps);\n    case \"paddle\":\n      return createPaddle(baseProps);\n  }\n}\n\nexport function MiniGame(props: MiniGameProps) {\n  const {\n    game,\n    width = 320,\n    height = 180,\n    devicePixelRatio = typeof window !== \"undefined\" ? window.devicePixelRatio || 1 : 1,\n    highScoreKey,\n    style,\n    className,\n    title,\n    showHud = true,\n    showControlsHint = true,\n    onGameOver,\n    onScoreChange,\n  } = props;\n\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [score, setScore] = useState(0);\n  const [isOver, setIsOver] = useState(false);\n  const { highScore, updateHighScore } = useHighScore(highScoreKey);\n\n  const lifecycle = useMemo(() => {\n    const base: BaseGameProps = {\n      width,\n      height,\n      devicePixelRatio,\n      onGameOver: (s) => {\n        setIsOver(true);\n        onGameOver?.(s);\n        updateHighScore(s);\n      },\n      onScoreChange: (s) => {\n        setScore(s);\n        onScoreChange?.(s);\n      },\n      highScoreKey,\n    };\n    return pickGame(game, base);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [game, width, height, devicePixelRatio, highScoreKey]);\n\n  useGameLoop(\n    canvasRef,\n    lifecycle,\n    { w: width, h: height },\n    devicePixelRatio\n  );\n\n  function handleReset() {\n    lifecycle.reset();\n    setIsOver(false);\n    setScore(0);\n  }\n\n  return (\n    <div style={{ display: \"inline-block\", ...style }} className={className}>\n      {title ? (\n        <div style={{ fontFamily: \"system-ui, sans-serif\", marginBottom: 8 }}>{title}</div>\n      ) : null}\n      <div\n        style={{\n          position: \"relative\",\n          width,\n          height,\n          userSelect: \"none\",\n          touchAction: \"none\",\n          background: \"#111\",\n          borderRadius: 8,\n          overflow: \"hidden\",\n        }}\n      >\n        <canvas ref={canvasRef} />\n        {showHud ? (\n          <div\n            style={{\n              position: \"absolute\",\n              top: 6,\n              left: 8,\n              right: 8,\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              color: \"#fff\",\n              fontFamily: \"system-ui, sans-serif\",\n              fontSize: 12,\n              opacity: 0.9,\n            }}\n          >\n            <div>Score: {Math.floor(score)}</div>\n            <div>High: {Math.floor(highScore)}</div>\n          </div>\n        ) : null}\n\n        {showControlsHint ? (\n          <div\n            style={{\n              position: \"absolute\",\n              bottom: 6,\n              left: 8,\n              right: 8,\n              color: \"#ddd\",\n              fontFamily: \"system-ui, sans-serif\",\n              fontSize: 11,\n              textAlign: \"center\",\n              opacity: 0.7,\n            }}\n          >\n            Arrow keys or tap\n          </div>\n        ) : null}\n\n        {isOver ? (\n          <div\n            style={{\n              position: \"absolute\",\n              inset: 0,\n              background: \"rgba(0,0,0,0.6)\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              color: \"#fff\",\n              fontFamily: \"system-ui, sans-serif\",\n              flexDirection: \"column\",\n              gap: 8,\n            }}\n          >\n            <div style={{ fontWeight: 600 }}>Game Over</div>\n            <button\n              onClick={handleReset}\n              style={{\n                padding: \"6px 10px\",\n                borderRadius: 6,\n                border: \"1px solid #666\",\n                background: \"#222\",\n                color: \"#fff\",\n                cursor: \"pointer\",\n              }}\n            >\n              Reset\n            </button>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\n","import { useEffect, useRef } from \"react\";\nimport type { GameLifecycle, InputState } from \"./types\";\n\nfunction now(): number {\n  return typeof performance !== \"undefined\" ? performance.now() : Date.now();\n}\n\nexport function useGameLoop(\n  canvasRef: React.RefObject<HTMLCanvasElement | null>,\n  lifecycle: GameLifecycle,\n  size: { w: number; h: number },\n  devicePixelRatio: number,\n  onFrame?: () => void\n) {\n  const rafRef = useRef<number | null>(null);\n  const lastTimeRef = useRef<number>(0);\n  const inputRef = useRef<InputState>({\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n    action: false,\n  });\n\n  // Input listeners\n  useEffect(() => {\n    function setKey(code: string, pressed: boolean) {\n      switch (code) {\n        case \"ArrowLeft\":\n        case \"KeyA\":\n          inputRef.current.left = pressed;\n          break;\n        case \"ArrowRight\":\n        case \"KeyD\":\n          inputRef.current.right = pressed;\n          break;\n        case \"ArrowUp\":\n        case \"KeyW\":\n          inputRef.current.up = pressed;\n          break;\n        case \"ArrowDown\":\n        case \"KeyS\":\n          inputRef.current.down = pressed;\n          break;\n        case \"Space\":\n          inputRef.current.action = pressed;\n          break;\n      }\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => setKey(e.code, true);\n    const onKeyUp = (e: KeyboardEvent) => setKey(e.code, false);\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      window.removeEventListener(\"keyup\", onKeyUp);\n    };\n  }, []);\n\n  // Touch/mouse as a generic action or directional input\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    function setAction(pressed: boolean) {\n      inputRef.current.action = pressed;\n    }\n\n    function onPointerDown(e: PointerEvent) {\n      setAction(true);\n      const rect = canvas!.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      if (x < rect.width / 2) {\n        inputRef.current.left = true;\n        inputRef.current.right = false;\n      } else {\n        inputRef.current.right = true;\n        inputRef.current.left = false;\n      }\n    }\n    function onPointerUp() {\n      setAction(false);\n      inputRef.current.left = false;\n      inputRef.current.right = false;\n    }\n    function onPointerCancel() {\n      onPointerUp();\n    }\n\n    canvas.addEventListener(\"pointerdown\", onPointerDown);\n    window.addEventListener(\"pointerup\", onPointerUp);\n    window.addEventListener(\"pointercancel\", onPointerCancel);\n    return () => {\n      canvas.removeEventListener(\"pointerdown\", onPointerDown);\n      window.removeEventListener(\"pointerup\", onPointerUp);\n      window.removeEventListener(\"pointercancel\", onPointerCancel);\n    };\n  }, [canvasRef]);\n\n  // Loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctxMaybe = canvas.getContext(\"2d\");\n    if (!ctxMaybe) return;\n    const ctx = ctxMaybe as CanvasRenderingContext2D;\n\n    // Resize backing store for crisp rendering\n    const backingW = Math.floor(size.w * devicePixelRatio);\n    const backingH = Math.floor(size.h * devicePixelRatio);\n    canvas.width = backingW;\n    canvas.height = backingH;\n    canvas.style.width = `${size.w}px`;\n    canvas.style.height = `${size.h}px`;\n    ctx.setTransform(devicePixelRatio, 0, 0, devicePixelRatio, 0, 0);\n\n    lifecycle.init(ctx, { w: size.w, h: size.h });\n\n    lastTimeRef.current = now();\n\n    function frame() {\n      const t = now();\n      const dt = Math.min(0.05, Math.max(0, (t - lastTimeRef.current) / 1000));\n      lastTimeRef.current = t;\n\n      lifecycle.update(dt, inputRef.current);\n      ctx.clearRect(0, 0, size.w, size.h);\n      lifecycle.draw(ctx);\n\n      onFrame?.();\n      rafRef.current = requestAnimationFrame(frame);\n    }\n    rafRef.current = requestAnimationFrame(frame);\n\n    return () => {\n      if (rafRef.current != null) cancelAnimationFrame(rafRef.current);\n    };\n  }, [canvasRef, lifecycle, size.w, size.h, devicePixelRatio, onFrame]);\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useHighScore(storageKey?: string) {\n  const [highScore, setHighScore] = useState<number>(0);\n\n  useEffect(() => {\n    if (!storageKey) return;\n    try {\n      const raw = localStorage.getItem(storageKey);\n      if (raw != null) {\n        const parsed = Number(raw);\n        if (!Number.isNaN(parsed)) setHighScore(parsed);\n      }\n    } catch {\n      // ignore\n    }\n  }, [storageKey]);\n\n  function updateHighScore(latest: number) {\n    if (!storageKey) return;\n    setHighScore((prev) => {\n      const next = Math.max(prev, latest);\n      try {\n        localStorage.setItem(storageKey, String(next));\n      } catch {\n        // ignore\n      }\n      return next;\n    });\n  }\n\n  return { highScore, updateHighScore } as const;\n}\n","import type { BaseGameProps, GameLifecycle } from \"../shared/types\";\n\ntype Obstacle = { x: number; y: number; w: number; h: number };\n\nexport function createRunner(base: BaseGameProps): GameLifecycle {\n  const gravity = 1600; // px/s^2\n  const jumpVelocity = 650; // px/s\n  const groundY = (base.height ?? 180) - 24;\n\n  let playerX = 40;\n  let playerY = groundY;\n  let playerVy = 0;\n  let speed = 240; // world speed px/s\n  let elapsed = 0;\n  let score = 0;\n  let over = false;\n  let obstacles: Obstacle[] = [];\n  let width = base.width ?? 320;\n  let height = base.height ?? 180;\n\n  function resetInternal() {\n    playerX = 40;\n    playerY = groundY;\n    playerVy = 0;\n    speed = 240;\n    elapsed = 0;\n    score = 0;\n    over = false;\n    obstacles = [];\n  }\n\n  function spawnObstacle() {\n    const size = 12 + Math.random() * 18;\n    const h = size;\n    const w = size;\n    obstacles.push({ x: width + w, y: groundY - h + 2, w, h });\n  }\n\n  return {\n    init(_ctx, size) {\n      width = size.w;\n      height = size.h;\n      resetInternal();\n    },\n    update(dt, input) {\n      if (over) return;\n\n      elapsed += dt;\n      speed = Math.min(520, speed + dt * 8); // gradual difficulty\n      score += dt * (speed * 0.1);\n      base.onScoreChange?.(score);\n\n      // input: jump\n      const wantsJump = input.up || input.action;\n      if ((wantsJump && playerY >= groundY - 0.5) || (wantsJump && playerVy === 0)) {\n        playerVy = -jumpVelocity;\n      }\n\n      // physics\n      playerVy += gravity * dt;\n      playerY += playerVy * dt;\n      if (playerY > groundY) {\n        playerY = groundY;\n        playerVy = 0;\n      }\n\n      // obstacles spawn\n      if (obstacles.length === 0 || obstacles[obstacles.length - 1].x < width - 120) {\n        if (Math.random() < 0.02 + Math.min(0.18, elapsed * 0.005)) spawnObstacle();\n      }\n\n      // move obstacles\n      obstacles.forEach((o) => (o.x -= speed * dt));\n      obstacles = obstacles.filter((o) => o.x + o.w > -10);\n\n      // collisions\n      for (const o of obstacles) {\n        const px = playerX;\n        const py = playerY - 14;\n        const pw = 18;\n        const ph = 14;\n        const collided = px < o.x + o.w && px + pw > o.x && py < o.y + o.h && py + ph > o.y;\n        if (collided) {\n          over = true;\n          base.onGameOver?.(Math.floor(score));\n          break;\n        }\n      }\n    },\n    draw(ctx) {\n      // ground\n      ctx.fillStyle = \"#2a2a2a\";\n      ctx.fillRect(0, groundY + 1, width, height - groundY);\n\n      // player\n      ctx.fillStyle = \"#4ade80\";\n      ctx.fillRect(playerX, playerY - 14, 18, 14);\n\n      // obstacles\n      ctx.fillStyle = \"#f87171\";\n      for (const o of obstacles) {\n        ctx.fillRect(o.x, o.y, o.w, o.h);\n      }\n\n      // parallax dashes\n      ctx.fillStyle = \"#3a3a3a\";\n      for (let i = 0; i < 8; i++) {\n        const x = ((i * 60 - (elapsed * speed) % 60) + width) % width;\n        ctx.fillRect(x, groundY - 20, 24, 2);\n      }\n    },\n    reset() {\n      resetInternal();\n    },\n    getScore() {\n      return Math.floor(score);\n    },\n    isGameOver() {\n      return over;\n    },\n  };\n}\n\n","import type { BaseGameProps, GameLifecycle } from \"../shared/types\";\n\nexport function createPaddle(base: BaseGameProps): GameLifecycle {\n  let width = base.width ?? 320;\n  let height = base.height ?? 180;\n\n  const paddleW = 48;\n  const paddleH = 8;\n  let paddleX = width / 2 - paddleW / 2;\n  const paddleY = height - 16;\n  const paddleSpeed = 360;\n\n  const ballR = 4;\n  let ballX = width / 2;\n  let ballY = height / 2;\n  let ballVx = 160;\n  let ballVy = -180;\n\n  let blocks: { x: number; y: number; w: number; h: number; alive: boolean }[] = [];\n  let score = 0;\n  let over = false;\n\n  function resetInternal() {\n    paddleX = width / 2 - paddleW / 2;\n    ballX = width / 2;\n    ballY = height / 2;\n    ballVx = 160 * (Math.random() > 0.5 ? 1 : -1);\n    ballVy = -180;\n    score = 0;\n    over = false;\n    blocks = [];\n    const rows = 4;\n    const cols = 8;\n    const gap = 4;\n    const bw = Math.floor((width - gap * (cols + 1)) / cols);\n    const bh = 12;\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        const x = gap + c * (bw + gap);\n        const y = 24 + r * (bh + gap);\n        blocks.push({ x, y, w: bw, h: bh, alive: true });\n      }\n    }\n  }\n\n  return {\n    init(_ctx, size) {\n      width = size.w;\n      height = size.h;\n      resetInternal();\n    },\n    update(dt, input) {\n      if (over) return;\n\n      if (input.left) paddleX -= paddleSpeed * dt;\n      if (input.right) paddleX += paddleSpeed * dt;\n      paddleX = Math.max(0, Math.min(width - paddleW, paddleX));\n\n      ballX += ballVx * dt;\n      ballY += ballVy * dt;\n\n      // walls\n      if (ballX < ballR) {\n        ballX = ballR;\n        ballVx = Math.abs(ballVx);\n      } else if (ballX > width - ballR) {\n        ballX = width - ballR;\n        ballVx = -Math.abs(ballVx);\n      }\n      if (ballY < ballR) {\n        ballY = ballR;\n        ballVy = Math.abs(ballVy);\n      }\n\n      // paddle collision\n      const withinPaddleX = ballX > paddleX && ballX < paddleX + paddleW;\n      const hittingPaddle = withinPaddleX && ballY > paddleY - ballR && ballY < paddleY + paddleH;\n      if (hittingPaddle) {\n        ballY = paddleY - ballR;\n        ballVy = -Math.abs(ballVy);\n        // add some english based on hit offset\n        const hitOffset = (ballX - (paddleX + paddleW / 2)) / (paddleW / 2);\n        ballVx += hitOffset * 60;\n      }\n\n      // block collisions (AABB vs circle approx)\n      for (const b of blocks) {\n        if (!b.alive) continue;\n        const closestX = Math.max(b.x, Math.min(ballX, b.x + b.w));\n        const closestY = Math.max(b.y, Math.min(ballY, b.y + b.h));\n        const dx = ballX - closestX;\n        const dy = ballY - closestY;\n        if (dx * dx + dy * dy < ballR * ballR) {\n          b.alive = false;\n          score += 10;\n          base.onScoreChange?.(score);\n          // reflect\n          if (Math.abs(dx) > Math.abs(dy)) ballVx *= -1;\n          else ballVy *= -1;\n          break;\n        }\n      }\n\n      // lose condition\n      if (ballY > height + ballR * 4) {\n        over = true;\n        base.onGameOver?.(score);\n      }\n\n      // win condition\n      if (!blocks.some((b) => b.alive)) {\n        over = true;\n        base.onGameOver?.(score + 100);\n      }\n    },\n    draw(ctx) {\n      // background\n      ctx.fillStyle = \"#0b1220\";\n      ctx.fillRect(0, 0, width, height);\n\n      // blocks\n      for (const b of blocks) {\n        if (!b.alive) continue;\n        ctx.fillStyle = \"#60a5fa\";\n        ctx.fillRect(b.x, b.y, b.w, b.h);\n      }\n\n      // paddle\n      ctx.fillStyle = \"#22d3ee\";\n      ctx.fillRect(paddleX, paddleY, paddleW, paddleH);\n\n      // ball\n      ctx.fillStyle = \"#fbbf24\";\n      ctx.beginPath();\n      ctx.arc(ballX, ballY, ballR, 0, Math.PI * 2);\n      ctx.fill();\n    },\n    reset() {\n      resetInternal();\n    },\n    getScore() {\n      return score;\n    },\n    isGameOver() {\n      return over;\n    },\n  };\n}\n\n","import type { BaseGameProps } from \"../shared/types\";\nimport { MiniGame } from \"../mini-game/MiniGame\";\n\nexport type RunnerProps = BaseGameProps & {\n  title?: string;\n};\n\nexport function Runner(props: RunnerProps) {\n  const { title = \"Runner\", ...rest } = props;\n  return <MiniGame game=\"runner\" title={title} {...rest} />;\n}\n\n","import type { BaseGameProps } from \"../shared/types\";\nimport { MiniGame } from \"../mini-game/MiniGame\";\n\nexport type PaddleProps = BaseGameProps & {\n  title?: string;\n};\n\nexport function Paddle(props: PaddleProps) {\n  const { title = \"Paddle\", ...rest } = props;\n  return <MiniGame game=\"paddle\" title={title} {...rest} />;\n}\n\n"],"mappings":"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","names":["useRef","useState","useEffect","_a","_b","_a","_b","useRef","useState","jsx","jsx"]}